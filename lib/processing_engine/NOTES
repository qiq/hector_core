externi modul, simple
	Process()
	- zapis do pipe cely resource
	- precti z pipe resource
	command:
	- bezne volani funkce: vytvor RPCMessage, zapis ji do pipe
	- precti vysledek z pipe, vrat

externi modul, parallel
	- cyklus:
		- najednou zapisuj do pipe (jsou-li jake) a cti z pipe resources (neblokovane)
	- pokud uz nejde neblokovane, podivej se, jestli mas nejake resources prectene z pipe
		- ano -> zapis do vystupni fronty (neblokovane)
			- je modul plny? (i po zapsani do vystupni fronty)
				- ano => zablokuj se v selectu 
				- ne => cti ze vstupni fronty (neblokovane), skoc zase na cyklus

		- ne: podivej se, jestli muzes pridat neco k aktualne zpracovavanym (neni naplnena kapacita modulu)
			- ano: precti ze vstupni fronty
			- ne: chvili se zablokuj v selectu pri cteni z pipe

interni modul, simple:
	Process()
	- zpracuj a vrat resource
	command:
	- bezne volani funkce

interni modul, parallel:
	cil: aby fungoval SELECT, pripadne aby mohl davat vic
	pozadavku najednou (napr. kdyz je pozadavek "drahy"). Existuje omezeni
	na maximalni pocet probihajicich pozadavku.
	Process(vstupni resources, vystupni resources)
	- jedno vlakno:
		- LOCK(input_resources)
		- zkopiruj input resources do vstupniho bufferu
		- pokud nic nedelas, tak wait, dokud nebudou nejake resources available
		- UNLOCK(input_resources)
		- pridej ty ze vstupniho bufferu ke zpracovani

		- zavolej SELECT s timeoutem 10 ms
		- obsluz r/w pozadavky, dokud jsou (neblokovane)
		- pridej hotove resources do vystupniho bufferu

		- LOCK(output_resources)
		- zkopiruj z vystupniho bufferu do output_resources
		- posli signal pro cekajici na zamku, pokud byl aspon jeden zkopirovany
		- UNLOCK(output_resources)

	- vlakno processoru:
		- pokud neni modul plne vytizeny:
			- cti neblokovane ze vstupni fronty, pokud module nic nedela, tak blokovane
		- vlez co Process()
		- pokud mas vstupni resources
			- LOCK(input_resources)
			- zkopiruj pointery do input_resources
			- signal pro druhe vlakno
			- UNLOCK(input_resources)

		- LOCK(output_resources)
		- pokud nebyly zadne vstupni resources
			- wait, dokud neni aspon jeden vstupni resource pripraveny
			- zkopiruj si output_resources k sobe
		- UNLOCK(output_resources)
		- vylez z Process()
		- zapise vysledky do vystupni fronty (vzdycky muze blokovat, nicmene snazi se byt neblokovany, pokud neni modul plne vytizeny)
	command:
	- bezne volani funkce

V externim modulu (simple)
	- precti z pipe resource/rpcmessage
	- zpracuj (vytvor spravny objekt v cilovem jazyce a zavolej Process(), pripadne zavolej metodu)
	- zapis resource/rpcmessage


perl -MExtUtils::Embed -e xsinit -- -o perlxsi.c
