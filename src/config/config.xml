<?xml version="1.0" encoding="UTF-8"?>
<!-- Example config file -->
<!DOCTYPE Config SYSTEM "config.dtd">

<Config baseDir="/home/qiq/qiq/work/hector/src">

	<Binary id="perl">
		<path>/usr/bin/perl</path>
		<arg>modules/perl/perl_stub.pl</arg>
		<env>PERL5LIB=...</env>
	</Binary>

	<Binary id="java">
		<path>/usr/bin/java</path>
		<arg>-jar</arg>
		<arg>xxxx</arg>
		<env>CLASSPATH=...</env>
	</Binary>

	<Server id="webserver">
		<threads>2</threads>
		<serverHost>*</serverHost>
		<serverPort>8080</serverPort>
		<lib name="servers/web/libserver-web.la"/>
		<param name="test" value="test"/>
	</Server>

	<Server id="md5server">
		<threads>2</threads>
		<serverHost>*</serverHost>
		<serverPort>1200</serverPort>
		<lib name="Server-md5.la"/>
	</Server>

	<Server id="master">
		<threads>1</threads>
		<serverHost>*</serverHost>
		<serverPort>1000</serverPort>
		<lib name="Master.la"/>
	</Server>

	<Server id="robot">
		<threads>1</threads>
		<serverHost>*</serverHost>
		<serverPort>1100</serverPort>
		<processingChain ref="robot_processing_chain"/>
		<!--processingChain ref="robot_processing_chain2"/-->
		<logConfig>config/robot.log.props</logConfig>
		<lib name="Robot.la"/>
		<param name="remotePort" value="2000"/>
		<param name="remoteHost" value="2001"/>
	</Server>

	<ProcessingChain id="robot_processing_chain">
		<processor ref="load_resource1"/>
		<processor ref="load_resource2"/>
		<processor ref="dummy"/>
		<processor ref="save_resource"/>
	</ProcessingChain>

	<Processor id="load_resource1">
		<threads>5</threads>
		<modules>
			<module ref="load_resource_module1"/>
			<module ref="preprocess_resource_module1"/>
		</modules>
		<output>
			<nextProcessor ref="dummy"/>
		</output>
	</Processor>

	<Module id="load_resource_module1">
		<lib name="DummyInput.la"/>
		<param name="inputDir" value="/tmp/input"/>
	</Module>

	<Module id="preprocess_resource_module1">
		<lib name="DummySimple.la"/>
		<param name="xxx" value="yyy"/>
	</Module>

	<Processor id="load_resource2">
		<threads>1</threads>
		<modules>
			<module ref="load_resource_module2"/>
		</modules>
		<output>
			<nextProcessor ref="dummy"/>
		</output>
	</Processor>

	<Module id="load_resource_module2">
		<lib name="DummyInput.la"/>
		<param name="inputDir" value="/tmp/input2"/>
	</Module>

	<Processor id="dummy">
		<threads>10</threads>
		<modules>
			<module ref="dummy_module"/>
		</modules>
		<input>
			<queue priority="100" maxItems="0" maxSize="0"/>
			<queue priority="0" maxItems="100" maxSize="0"/>
		</input>
		<output>
			<!-- loopback -->
			<nextProcessor ref="dummy" priority="100" filter="1"/>
			<!-- copy: do not stop processing in case of match, but
			create resource copy and continue instead -->
			<nextProcessor ref="save_resource" copy="1"/>
			<nextProcessor ref="save_resource"/>
		</output>
	</Processor>

	<Module id="dummy_module">
		<lib name="DummySimple.la"/>
	</Module>

	<Processor id="external_test">
		<threads>12</threads>
		<modules>
			<module ref="external_test_module"/>
		</modules>
	</Processor>

	<Module id="external_test_module">
		<!--lib name="modules/libmodule-external-simple.la"/-->
		<lib name="DummySimple.pm" binary="perl"/>
	</Module>

	<Processor id="save_resource">
		<threads>4</threads>
		<modules>
			<module ref="save_resource_module"/>
		</modules>
		<input>
			<queue maxItems="100" maxSize="200"/>
		</input>
	</Processor>

	<Module id="save_resource_module">
		<lib name="DummyOutput.la"/>
		<param name="outputDir" value="/tmp/output"/>
	</Module>

</Config>
